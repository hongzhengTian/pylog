#include "{{top_name}}.h"
#include "ap_int.h"
DTYPE max_unit(DTYPE a , DTYPE b){
    return a>b?a:b ;
}
void max_0(DTYPE A[SIZE] , DTYPE* max ){
    DTYPE temp[2][SIZE/2+1];//SIZE DEVIDED BY 2 AND CILING
#pragma HLS ARRAY_PARTITION variable=temp complete
#pragma HLS ARRAY_PARTITION variable=A complete

    for (int i=0; i<ITERATION; i++){
        for(int b=0;b<BATCH;b=b+2){ // BATCH = 2^n
        	if( i*BATCH+b+1 <SIZE ){
            temp[0][i*BATCH/2+b/2] = max_unit(A[i*BATCH+b],A[i*BATCH+b+1]);
        	}else if(i*BATCH/2+b<SIZE && i*BATCH+b+1>=SIZE ){
        	temp[0][i*BATCH/2+b/2] = max_unit(A[i*BATCH+b],0);
        	}else {
        		temp[0][i*BATCH+b/2] = 0 ;
        	}
        }        
        for(int m=0; m<BATCH/2; m=m+2){
            if( i*BATCH/2+1<SIZE/2+1){
                temp[1][i]= max_unit(temp[0][i*BATCH/2],temp[0][i*BATCH/2+1]);
        	}else if((i*BATCH/2<SIZE/2+1) && (i*BATCH/2+1>=SIZE/2+1) ){
        	    temp[1][i]= max_unit(temp[0][i*BATCH/2],temp[0][i*BATCH/2]);
        	}else {
        		temp[1][i]= 0 ;
        	}
        }    

        for(int j = 0; j <BATCH/4; j++){
            if (temp[1][i*BATCH/4+j]>=*max){
                *max = temp[1][i*BATCH/4+j];}
        }
